// Generated by view binder compiler. Do not edit!
package com.example.tesourosartsticos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tesourosartsticos.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInicioBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText inputName;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final ImageView logoLogin;

  @NonNull
  public final EditText senhaInput;

  @NonNull
  public final TextView senhaInputText;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextView userInputText;

  private ActivityInicioBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText inputName, @NonNull Button loginButton,
      @NonNull ImageView logoLogin, @NonNull EditText senhaInput, @NonNull TextView senhaInputText,
      @NonNull TextInputLayout textInputLayout, @NonNull TextView userInputText) {
    this.rootView = rootView;
    this.inputName = inputName;
    this.loginButton = loginButton;
    this.logoLogin = logoLogin;
    this.senhaInput = senhaInput;
    this.senhaInputText = senhaInputText;
    this.textInputLayout = textInputLayout;
    this.userInputText = userInputText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInicioBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInicioBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_inicio, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInicioBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.inputName;
      TextInputEditText inputName = ViewBindings.findChildViewById(rootView, id);
      if (inputName == null) {
        break missingId;
      }

      id = R.id.loginButton;
      Button loginButton = ViewBindings.findChildViewById(rootView, id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.logoLogin;
      ImageView logoLogin = ViewBindings.findChildViewById(rootView, id);
      if (logoLogin == null) {
        break missingId;
      }

      id = R.id.senhaInput;
      EditText senhaInput = ViewBindings.findChildViewById(rootView, id);
      if (senhaInput == null) {
        break missingId;
      }

      id = R.id.senhaInputText;
      TextView senhaInputText = ViewBindings.findChildViewById(rootView, id);
      if (senhaInputText == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.userInputText;
      TextView userInputText = ViewBindings.findChildViewById(rootView, id);
      if (userInputText == null) {
        break missingId;
      }

      return new ActivityInicioBinding((ConstraintLayout) rootView, inputName, loginButton,
          logoLogin, senhaInput, senhaInputText, textInputLayout, userInputText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
